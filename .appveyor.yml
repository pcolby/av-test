version: '{branch}-{build}'

environment:
  matrix:
    # @todo Add other versions.
    - QTDIR: C:\Qt\5.10.1\msvc2015
    - QTDIR: C:\Qt\5.10.1\msvc2015_64

install:
  - '%QTDIR%\bin\qtenv2.bat'
  - qmake -v
  - if %QTDIR:_64=%==%QTDIR% ( set ARCH=x86 ) else set ARCH=x64
  - if %QTDIR:msvc=%==%QTDIR% g++ --version
  - if %QTDIR:msvc=%==%QTDIR% set make=mingw32-make.exe
  - if %QTDIR:msvc=%==%QTDIR% %make% --version
  - if not %QTDIR:msvc2013=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc2015=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc=%==%QTDIR% set make=nmake.exe
  - if not %QTDIR:msvc=%==%QTDIR% %make% /? > nul

before_build:
  # Prepare the out-of-source build directory.
  - mkdir %APPVEYOR_BUILD_FOLDER%-build
  - cd %APPVEYOR_BUILD_FOLDER%-build
  - qmake -r -Wall -Wlogic -Wparser %APPVEYOR_BUILD_FOLDER%

build_script:
  - cd %APPVEYOR_BUILD_FOLDER%-build
  - set QT_LOGGING_RULES="*.debug=true"
  - '%make%'

test_script:
  - cd %APPVEYOR_BUILD_FOLDER%-build
  - '%make% check'

after_test:
  - echo 123
  - ps: Start-sleep -s 5

on_failure:
  - echo 456
  - ps: Start-sleep -s 5
